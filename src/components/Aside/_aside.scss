@import "vanilla-framework/scss/vanilla";
@import "../../scss/breakpoints";
@import "../../scss/functions/z-index";
@import "../../scss/variables";

// Scope the l-aside within l-application so that it can override the Vanilla styles.
.l-application .l-aside {
  // Always fill the screen height.
  height: 100vh;
  // The aside is within the main element so any long content will make the
  // aside scroll up with the page so this needs to be prevented.
  position: fixed;

  @media (max-width: $breakpoint-large - 1px) {
    // Make the panel appear above the side/top menus.
    z-index: z("zelda") + 1 !important;
  }

  .loading {
    align-items: center;
    background-color: $color-x-light;
    display: flex;
    height: 100vh;
    justify-content: center;
    width: 100%;
  }

  &.is-split {
    @include desktop {
      max-width: 768px;
      width: 66%;
    }

    .aside-split-wrapper {
      display: flex;
      // Display the split wrappers side by side.
      flex-direction: row;
      padding-bottom: 1rem;

      .aside-split-col {
        display: flex;
        flex: 50%;
        // Make the content take the full height of the panel so that the drawer get
        // stuck to the bottom.
        flex-direction: column;

        @include desktop {
          &:first-child {
            border-right: 1px solid #ccc;
            padding-right: $sph--x-large;
          }

          &:last-child {
            margin-left: $sph--x-large;
          }
        }
      }
    }
  }

  .p-panel {
    // Panels inside the aside do not need to handle overflow as this is already
    // handled by the aside, and doubling up prevents sticky from working in the children.
    overflow: initial;

    .p-panel__content {
      overflow: initial;
    }
  }
}
