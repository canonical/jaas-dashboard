name: CI
on:
  push:
    branches:
      - main
      - audit-logs
  pull_request:
    branches:
      - main
      - audit-logs
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install
        run: yarn install --immutable
      - run: yarn test --coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
  prettier:
    name: Check Prettier
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install
        run: yarn install --immutable
      - run: yarn prettier --check 'src/**/*'
  eslint:
    name: Lint JavaScript/TypeScript
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install
        run: yarn install --immutable
      - run: yarn eslint-check
  stylelint:
    name: Lint SCSS
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install
        run: yarn install --immutable
      - run: yarn stylelint-check
  types:
    name: Check types
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install
        run: yarn install --immutable
      - run: yarn typescript-build
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install
        run: yarn install --immutable
      - run: CI=false yarn build
  dotrun:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dotrun
        uses: canonical/install-dotrun@main
      - name: Install dependencies
        run: dotrun install
      - name: Build assets
        run: dotrun --env CI=false build
      - name: Run dotrun
        run: |
          dotrun &
          curl --head --fail --retry-delay 1 --retry 30 --retry-connrefused http://localhost:8036
